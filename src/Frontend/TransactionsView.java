package Frontend;

import API.Controller;
import Transact.Transaction;
import Transact.TransactionStatus;
import Transact.TransactionType;
import Utils.IO;
import Utils.MessageType;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import java.util.List;

public class TransactionsView extends AbstractJPanel {
    private JButton backButton;
    private JTable transactionsTable;
    private JPanel basePanel;

    public TransactionsView() {
        refresh();
        backButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Frontend.getInstance().back();
            }
        });
    }

    public void refresh() {
        Date date = new Date();
        String dateStr = date.getMonth() + 1 + "-" + date.getDate() + "-" + (1900 + date.getYear());
        IO.displayMessage("Transactions for " + dateStr, MessageType.ERROR);
        try {
            List<Transaction> transactions = Controller.getTransactionByDate(dateStr);
            System.out.println(dateStr);
            System.out.println(transactions);
            loadTransactionsTable(transactions);
        } catch (Exception e) {
            utils.showNotice("ERROR: Please contact support.");
        }

    }

    public void loadTransactionsTable(List<Transaction> transactions) {
        transactionsTable.removeAll();
        String[] columns = new String[]{
                "id", "status", "date", "from", "to", "amount"
        };
        Object[][] data = new Object[transactions.size()][6];
        for (int i = 0; i < transactions.size(); i++) {
            Transaction transaction = transactions.get(i);
            String from = "" + transaction.getFrom().getAccountNumber();
            String to = "" + transaction.getTo().getAccountNumber();
            double money = transaction.getMoney().getAmount();
            data[transactions.size() - i - 1] = new Object[]{transaction.getId(), transaction.getTransactionStatus(), transaction.getDate().toString(), from, to, money};
        }
        transactionsTable.setModel(utils.getTableModel(data, columns));
        transactionsTable.revalidate();
    }

    @Override
    public JPanel getBasePanel() {
        return basePanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        basePanel = new JPanel();
        basePanel.setLayout(new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        backButton = new JButton();
        backButton.setText("Back");
        basePanel.add(backButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        basePanel.add(spacer1, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        basePanel.add(scrollPane1, new GridConstraints(1, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        transactionsTable = new JTable();
        scrollPane1.setViewportView(transactionsTable);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return basePanel;
    }

}
